package projectzulu.common.mobs.models;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.util.MathHelper;

import org.lwjgl.opengl.GL11;

import projectzulu.common.core.ModelHelper;
import projectzulu.common.mobs.entity.EntityStates;
import projectzulu.common.mobs.entity.EntityTreeEnt;

public class ModelTreeEnt extends ModelBase {
    ModelRenderer BODYROT;
    ModelRenderer LEGRIGTOPROT;
    ModelRenderer LEGLEFTTOPROT;
    ModelRenderer mosscb3;
    ModelRenderer mosscf2;
    ModelRenderer mosscf1;
    ModelRenderer mosscf3;
    ModelRenderer mosscb2;
    ModelRenderer mosscb;
    ModelRenderer body;
    ModelRenderer ARMLEFTOPROT;
    ModelRenderer mossual2;
    ModelRenderer mossual3;
    private ModelRenderer mossual1;
    private ModelRenderer mossual5;
    private ModelRenderer mossual4;
    private ModelRenderer mossual6;
    private ModelRenderer mossual7;
    private ModelRenderer mossual8;
    private ModelRenderer armleftop;
    private ModelRenderer ARMLEFBOTROT;
    private ModelRenderer fingerl1;
    private ModelRenderer fingerl3;
    private ModelRenderer fingerl2;
    private ModelRenderer mosslal2;
    private ModelRenderer mosslal1;
    private ModelRenderer mosslal3;
    private ModelRenderer mosslal5;
    private ModelRenderer mosslal4;
    private ModelRenderer armlefbot;
    private ModelRenderer ARMRIGTOPROT;
    private ModelRenderer mossuar3;
    private ModelRenderer mossuar2;
    private ModelRenderer mossuar1;
    private ModelRenderer mossuar5;
    private ModelRenderer mossuar4;
    private ModelRenderer mossuar8;
    private ModelRenderer mossuar6;
    private ModelRenderer mossuar7;
    private ModelRenderer armrigtop;
    private ModelRenderer ARMRIGBOTROT;
    private ModelRenderer fingerr3;
    private ModelRenderer fingerr1;
    private ModelRenderer fingerr2;
    private ModelRenderer mosslar2;
    private ModelRenderer mosslar1;
    private ModelRenderer mosslar3;
    private ModelRenderer mosslar4;
    private ModelRenderer mosslar5;
    private ModelRenderer armrigbot;
    private ModelRenderer BACKTREESTEM6;
    private ModelRenderer backtreesleaves6;
    private ModelRenderer backtreestem6;
    private ModelRenderer BACKTREESTEM5;
    private ModelRenderer backtreestem5;
    private ModelRenderer backtreesleaves5;
    private ModelRenderer BACKTREESTEM4;
    private ModelRenderer backtreesleaves4;
    private ModelRenderer backtreestem4;
    private ModelRenderer BACKTREESTEM3;
    private ModelRenderer backtreesleaves3;
    private ModelRenderer backtreestem3;
    private ModelRenderer BACKTREESTEM2;
    private ModelRenderer backtreesleaves2;
    private ModelRenderer backtreestem2;
    private ModelRenderer BACKTREESTEM1;
    private ModelRenderer backtreesleaves1;
    private ModelRenderer backtreestem1;
    private ModelRenderer HEADROT;
    private ModelRenderer brow4;
    private ModelRenderer NOSEROT;
    private ModelRenderer nose2;
    private ModelRenderer nose1;
    private ModelRenderer nose3;
    private ModelRenderer brow3;
    private ModelRenderer brow1;
    private ModelRenderer brow5;
    private ModelRenderer brow2;
    private ModelRenderer head;
    private ModelRenderer mossulr1;
    private ModelRenderer mossulr2;
    private ModelRenderer legrigtop;
    private ModelRenderer LEGRIGBOTROT;
    private ModelRenderer mossllr2;
    private ModelRenderer mossllr1;
    private ModelRenderer toer6;
    private ModelRenderer toer5;
    private ModelRenderer toer4;
    private ModelRenderer toer3;
    private ModelRenderer toer2;
    private ModelRenderer toer1;
    private ModelRenderer legrigbot;
    private ModelRenderer mossull2;
    private ModelRenderer mossull1;
    private ModelRenderer mossull4;
    private ModelRenderer legleftop;
    private ModelRenderer mossull3;
    private ModelRenderer LEGLEFBOTROT;
    private ModelRenderer toel4;
    private ModelRenderer toel6;
    private ModelRenderer toel5;
    private ModelRenderer toel3;
    private ModelRenderer toel2;
    private ModelRenderer toel1;
    private ModelRenderer mosslll1;
    private ModelRenderer mosslll2;
    private ModelRenderer leglefbot;

    public ModelTreeEnt() {
	textureWidth = 128;
	textureHeight = 64;
	float heightToRaise = 8f;
	// setTextureOffset("BODYROT.bodyfold", 0, 0);
	// setTextureOffset("LEGRIGTOPROT.legrigtopfold", 0, 0);
	// setTextureOffset("LEGLEFTTOPROT.legleftopfold", 0, 0);

	BODYROT = new ModelRenderer(this, "BODYROT");
	BODYROT.setRotationPoint(0F, 4F - heightToRaise, 0.5F);
	setRotation(BODYROT, 0F, 0F, 0F);
	BODYROT.mirror = true;
	mosscb3 = new ModelRenderer(this, 0, 36);
	mosscb3.addBox(0F, 0F, 0F, 7, 11, 3);
	BODYROT.addChild(mosscb3);
	mosscb3.setRotationPoint(-3.5F, -12F, 3F);
	mosscb3.setTextureSize(128, 64);
	mosscb3.mirror = true;
	setRotation(mosscb3, 0F, 0F, 0F);
	mosscf2 = new ModelRenderer(this, 0, 52);
	mosscf2.addBox(-1.5F, -1.5F, -0.5F, 4, 6, 1);
	BODYROT.addChild(mosscf2);
	mosscf2.setRotationPoint(-4F, -4F, -3.5F);
	mosscf2.setTextureSize(128, 64);
	mosscf2.mirror = true;
	setRotation(mosscf2, 0F, 0F, 0F);
	mosscf1 = new ModelRenderer(this, 0, 52);
	mosscf1.addBox(-1.5F, -1.5F, -0.5F, 5, 5, 1);
	BODYROT.addChild(mosscf1);
	mosscf1.setRotationPoint(1F, -8F, -3.5F);
	mosscf1.setTextureSize(128, 64);
	mosscf1.mirror = true;
	setRotation(mosscf1, 0F, 0F, 0F);
	mosscf3 = new ModelRenderer(this, 0, 52);
	mosscf3.addBox(-1.5F, -1.5F, -0.5F, 3, 4, 1);
	BODYROT.addChild(mosscf3);
	mosscf3.setRotationPoint(4F, -1F, -3.5F);
	mosscf3.setTextureSize(128, 64);
	mosscf3.mirror = true;
	setRotation(mosscf3, 0F, 0F, 0F);
	mosscb2 = new ModelRenderer(this, 0, 28);
	mosscb2.addBox(0F, 0F, 0F, 7, 3, 4);
	BODYROT.addChild(mosscb2);
	mosscb2.setRotationPoint(-3.5F, -15F, 1F);
	mosscb2.setTextureSize(128, 64);
	mosscb2.mirror = true;
	setRotation(mosscb2, 0F, 0F, 0F);
	mosscb = new ModelRenderer(this, 0, 20);
	mosscb.addBox(0F, 0F, 0F, 9, 3, 4);
	BODYROT.addChild(mosscb);
	mosscb.setRotationPoint(-4.5F, -15F, -3F);
	mosscb.setTextureSize(128, 64);
	mosscb.mirror = true;
	setRotation(mosscb, 0F, 0F, 0F);
	body = new ModelRenderer(this, 0, 0);
	body.addBox(0F, 0F, 0F, 15, 14, 6);
	BODYROT.addChild(body);
	body.setRotationPoint(-8F, -12F, -3F);
	body.setTextureSize(128, 64);
	body.mirror = true;
	setRotation(body, 0F, 0F, 0F);
	ARMLEFTOPROT = new ModelRenderer(this, "ARMLEFTOPROT");
	BODYROT.addChild(ARMLEFTOPROT);
	ARMLEFTOPROT.setRotationPoint(-10.5F, -10F, 0F);
	setRotation(ARMLEFTOPROT, 0F, 0F, 0F);
	ARMLEFTOPROT.mirror = true;
	mossual2 = new ModelRenderer(this, 0, 52);
	mossual2.addBox(-1.5F, -1.5F, -0.5F, 2, 5, 1);
	ARMLEFTOPROT.addChild(mossual2);
	mossual2.setRotationPoint(-0.5F, 8F, -3F);
	mossual2.setTextureSize(128, 64);
	mossual2.mirror = true;
	setRotation(mossual2, 0F, 0F, 0F);
	mossual3 = new ModelRenderer(this, 0, 52);
	mossual3.addBox(-1.5F, -1.5F, -0.5F, 4, 1, 1);
	ARMLEFTOPROT.addChild(mossual3);
	mossual3.setRotationPoint(-0.5F, 7F, -3F);
	mossual3.setTextureSize(128, 64);
	mossual3.mirror = true;
	setRotation(mossual3, 0F, 0F, 0F);
	mossual1 = new ModelRenderer(this, 0, 52);
	mossual1.addBox(-1.5F, -1.5F, -0.5F, 2, 6, 1);
	ARMLEFTOPROT.addChild(mossual1);
	mossual1.setRotationPoint(0.5F, 1F, -3F);
	mossual1.setTextureSize(128, 64);
	mossual1.mirror = true;
	setRotation(mossual1, 0F, 0F, 0F);
	mossual5 = new ModelRenderer(this, 0, 52);
	mossual5.addBox(-0.5F, -3F, -1F, 1, 4, 3);
	ARMLEFTOPROT.addChild(mossual5);
	mossual5.setRotationPoint(-3F, 11F, -1.5F);
	mossual5.setTextureSize(128, 64);
	mossual5.mirror = true;
	setRotation(mossual5, 0F, 0F, 0F);
	mossual4 = new ModelRenderer(this, 0, 52);
	mossual4.addBox(-0.5F, -3F, -1F, 1, 6, 2);
	ARMLEFTOPROT.addChild(mossual4);
	mossual4.setRotationPoint(-3F, 1F, -0.5F);
	mossual4.setTextureSize(128, 64);
	mossual4.mirror = true;
	setRotation(mossual4, 0F, 0F, 0F);
	mossual6 = new ModelRenderer(this, 0, 52);
	mossual6.addBox(-1.5F, -1.5F, -0.5F, 2, 6, 1);
	ARMLEFTOPROT.addChild(mossual6);
	mossual6.setRotationPoint(0F, 7F, 2.333333F);
	mossual6.setTextureSize(128, 64);
	mossual6.mirror = true;
	setRotation(mossual6, 0F, 0F, 0F);
	mossual7 = new ModelRenderer(this, 0, 52);
	mossual7.addBox(-1.5F, -1.5F, -0.5F, 4, 1, 1);
	ARMLEFTOPROT.addChild(mossual7);
	mossual7.setRotationPoint(-0.5F, 6F, 3.5F);
	mossual7.setTextureSize(128, 64);
	mossual7.mirror = true;
	setRotation(mossual7, 0F, 0F, 0F);
	mossual8 = new ModelRenderer(this, 0, 52);
	mossual8.addBox(-1.5F, -1.5F, -0.5F, 2, 5, 1);
	ARMLEFTOPROT.addChild(mossual8);
	mossual8.setRotationPoint(-0.5F, 0F, 3F);
	mossual8.setTextureSize(128, 64);
	mossual8.mirror = true;
	setRotation(mossual8, 0F, 0F, 0F);
	armleftop = new ModelRenderer(this, 42, 0);
	armleftop.addBox(-2.5F, -2F, -2.5F, 5, 16, 5);
	ARMLEFTOPROT.addChild(armleftop);
	armleftop.setRotationPoint(0F, -2F, 0F);
	armleftop.setTextureSize(128, 64);
	armleftop.mirror = true;
	setRotation(armleftop, 0F, 0F, 0F);
	ARMLEFBOTROT = new ModelRenderer(this, "ARMLEFBOTROT");
	ARMLEFTOPROT.addChild(ARMLEFBOTROT);
	ARMLEFBOTROT.setRotationPoint(0F, 12F, 0F);
	setRotation(ARMLEFBOTROT, 0F, 0F, 0F);
	ARMLEFBOTROT.mirror = true;
	fingerl1 = new ModelRenderer(this, 32, 20);
	fingerl1.addBox(-0.5F, 0F, -0.5F, 1, 3, 1);
	ARMLEFBOTROT.addChild(fingerl1);
	fingerl1.setRotationPoint(-2F, 14F, 0F);
	fingerl1.setTextureSize(128, 64);
	fingerl1.mirror = true;
	setRotation(fingerl1, 0F, 0F, 0F);
	fingerl3 = new ModelRenderer(this, 32, 20);
	fingerl3.addBox(-0.5F, 0F, -0.5F, 1, 3, 1);
	ARMLEFBOTROT.addChild(fingerl3);
	fingerl3.setRotationPoint(1F, 14F, 2F);
	fingerl3.setTextureSize(128, 64);
	fingerl3.mirror = true;
	setRotation(fingerl3, 0F, 0F, 0F);
	fingerl2 = new ModelRenderer(this, 32, 20);
	fingerl2.addBox(-0.5F, 0F, -0.5F, 1, 3, 1);
	ARMLEFBOTROT.addChild(fingerl2);
	fingerl2.setRotationPoint(1F, 14F, -2F);
	fingerl2.setTextureSize(128, 64);
	fingerl2.mirror = true;
	setRotation(fingerl2, 0F, 0F, 0F);
	mosslal2 = new ModelRenderer(this, 0, 52);
	mosslal2.addBox(-1.5F, -1.5F, -0.5F, 2, 5, 1);
	ARMLEFBOTROT.addChild(mosslal2);
	mosslal2.setRotationPoint(0.5F, 4F, -3F);
	mosslal2.setTextureSize(128, 64);
	mosslal2.mirror = true;
	setRotation(mosslal2, 0F, 0F, 0F);
	mosslal1 = new ModelRenderer(this, 0, 52);
	mosslal1.addBox(-1.5F, -1.5F, -0.5F, 3, 1, 1);
	ARMLEFBOTROT.addChild(mosslal1);
	mosslal1.setRotationPoint(-0.5F, 3F, -3F);
	mosslal1.setTextureSize(128, 64);
	mosslal1.mirror = true;
	setRotation(mosslal1, 0F, 0F, 0F);
	mosslal3 = new ModelRenderer(this, 0, 52);
	mosslal3.addBox(-0.5F, -3F, -1F, 1, 6, 2);
	ARMLEFBOTROT.addChild(mosslal3);
	mosslal3.setRotationPoint(-3F, 6F, -0.5F);
	mosslal3.setTextureSize(128, 64);
	mosslal3.mirror = true;
	setRotation(mosslal3, 0F, 0F, 0F);
	mosslal5 = new ModelRenderer(this, 0, 52);
	mosslal5.addBox(-1.5F, -1.5F, -0.5F, 2, 5, 1);
	ARMLEFBOTROT.addChild(mosslal5);
	mosslal5.setRotationPoint(0.5F, 4F, 3F);
	mosslal5.setTextureSize(128, 64);
	mosslal5.mirror = true;
	setRotation(mosslal5, 0F, 0F, 0F);
	mosslal4 = new ModelRenderer(this, 0, 52);
	mosslal4.addBox(-1.5F, -1.5F, -0.5F, 3, 1, 1);
	ARMLEFBOTROT.addChild(mosslal4);
	mosslal4.setRotationPoint(-0.5F, 3F, 3F);
	mosslal4.setTextureSize(128, 64);
	mosslal4.mirror = true;
	setRotation(mosslal4, 0F, 0F, 0F);
	armlefbot = new ModelRenderer(this, 42, 21);
	armlefbot.addBox(-2.5F, 0F, -2.5F, 5, 14, 5);
	ARMLEFBOTROT.addChild(armlefbot);
	armlefbot.setRotationPoint(0F, 0F, 0F);
	armlefbot.setTextureSize(128, 64);
	armlefbot.mirror = true;
	setRotation(armlefbot, 0F, 0F, 0F);
	// armleftopfold.addChildModelRenderer(ARMLEFBOTROT);
	// bodyfold.addChildModelRenderer(ARMLEFTOPROT);
	ARMRIGTOPROT = new ModelRenderer(this, "ARMRIGTOPROT");
	BODYROT.addChild(ARMRIGTOPROT);
	ARMRIGTOPROT.setRotationPoint(9.5F, -10F, 0F);
	setRotation(ARMRIGTOPROT, 0F, 0F, 0F);
	ARMRIGTOPROT.mirror = true;
	mossuar3 = new ModelRenderer(this, 0, 52);
	mossuar3.addBox(-1.5F, -1.5F, -0.5F, 2, 5, 1);
	ARMRIGTOPROT.addChild(mossuar3);
	mossuar3.setRotationPoint(0.5F, 8F, -3F);
	mossuar3.setTextureSize(128, 64);
	mossuar3.mirror = true;
	setRotation(mossuar3, 0F, 0F, 0F);
	mossuar2 = new ModelRenderer(this, 0, 52);
	mossuar2.addBox(-1.5F, -1.5F, -0.5F, 4, 1, 1);
	ARMRIGTOPROT.addChild(mossuar2);
	mossuar2.setRotationPoint(-0.5F, 7F, -3F);
	mossuar2.setTextureSize(128, 64);
	mossuar2.mirror = true;
	setRotation(mossuar2, 0F, 0F, 0F);
	mossuar1 = new ModelRenderer(this, 0, 52);
	mossuar1.addBox(-1.5F, -1.5F, -0.5F, 2, 6, 1);
	ARMRIGTOPROT.addChild(mossuar1);
	mossuar1.setRotationPoint(0.5F, 1F, -3F);
	mossuar1.setTextureSize(128, 64);
	mossuar1.mirror = true;
	setRotation(mossuar1, 0F, 0F, 0F);
	mossuar5 = new ModelRenderer(this, 0, 52);
	mossuar5.addBox(-0.5F, -3F, -1F, 1, 4, 3);
	ARMRIGTOPROT.addChild(mossuar5);
	mossuar5.setRotationPoint(3F, 11F, -1F);
	mossuar5.setTextureSize(128, 64);
	mossuar5.mirror = true;
	setRotation(mossuar5, 0F, 0F, 0F);
	mossuar4 = new ModelRenderer(this, 0, 52);
	mossuar4.addBox(-0.5F, -3F, -1F, 1, 6, 2);
	ARMRIGTOPROT.addChild(mossuar4);
	mossuar4.setRotationPoint(3F, 1F, -0.5F);
	mossuar4.setTextureSize(128, 64);
	mossuar4.mirror = true;
	setRotation(mossuar4, 0F, 0F, 0F);
	mossuar8 = new ModelRenderer(this, 0, 52);
	mossuar8.addBox(-1.5F, -1.5F, -0.5F, 2, 5, 1);
	ARMRIGTOPROT.addChild(mossuar8);
	mossuar8.setRotationPoint(0.5F, 8F, 3F);
	mossuar8.setTextureSize(128, 64);
	mossuar8.mirror = true;
	setRotation(mossuar8, 0F, 0F, 0F);
	mossuar6 = new ModelRenderer(this, 0, 52);
	mossuar6.addBox(-1.5F, -1.5F, -0.5F, 2, 6, 1);
	ARMRIGTOPROT.addChild(mossuar6);
	mossuar6.setRotationPoint(0.5F, 1F, 3F);
	mossuar6.setTextureSize(128, 64);
	mossuar6.mirror = true;
	setRotation(mossuar6, 0F, 0F, 0F);
	mossuar7 = new ModelRenderer(this, 0, 52);
	mossuar7.addBox(-1.5F, -1.5F, -0.5F, 4, 1, 1);
	ARMRIGTOPROT.addChild(mossuar7);
	mossuar7.setRotationPoint(-0.5F, 7F, 3F);
	mossuar7.setTextureSize(128, 64);
	mossuar7.mirror = true;
	setRotation(mossuar7, 0F, 0F, 0F);
	armrigtop = new ModelRenderer(this, 42, 0);
	armrigtop.addBox(-2.5F, -2F, -2.5F, 5, 16, 5);
	ARMRIGTOPROT.addChild(armrigtop);
	armrigtop.setRotationPoint(0F, -2F, 0F);
	armrigtop.setTextureSize(128, 64);
	armrigtop.mirror = true;
	setRotation(armrigtop, 0F, 0F, 0F);
	ARMRIGBOTROT = new ModelRenderer(this, "ARMRIGBOTROT");
	ARMRIGTOPROT.addChild(ARMRIGBOTROT);
	ARMRIGBOTROT.setRotationPoint(0F, 12F, 0F);
	setRotation(ARMRIGBOTROT, 0F, 0F, 0F);
	ARMRIGBOTROT.mirror = true;
	fingerr3 = new ModelRenderer(this, 32, 20);
	fingerr3.addBox(-0.5F, 0F, -0.5F, 1, 3, 1);
	ARMRIGBOTROT.addChild(fingerr3);
	fingerr3.setRotationPoint(-1F, 14F, 2F);
	fingerr3.setTextureSize(128, 64);
	fingerr3.mirror = true;
	setRotation(fingerr3, 0F, 0F, 0F);
	fingerr1 = new ModelRenderer(this, 32, 20);
	fingerr1.addBox(-0.5F, 0F, -0.5F, 1, 3, 1);
	ARMRIGBOTROT.addChild(fingerr1);
	fingerr1.setRotationPoint(2F, 14F, 0F);
	fingerr1.setTextureSize(128, 64);
	fingerr1.mirror = true;
	setRotation(fingerr1, 0F, 0F, 0F);
	fingerr2 = new ModelRenderer(this, 32, 20);
	fingerr2.addBox(-0.5F, 0F, -0.5F, 1, 3, 1);
	ARMRIGBOTROT.addChild(fingerr2);
	fingerr2.setRotationPoint(-1F, 14F, -2F);
	fingerr2.setTextureSize(128, 64);
	fingerr2.mirror = true;
	setRotation(fingerr2, 0F, 0F, 0F);
	mosslar2 = new ModelRenderer(this, 0, 52);
	mosslar2.addBox(-1.5F, -1.5F, -0.5F, 2, 5, 1);
	ARMRIGBOTROT.addChild(mosslar2);
	mosslar2.setRotationPoint(0.5F, 4F, -3F);
	mosslar2.setTextureSize(128, 64);
	mosslar2.mirror = true;
	setRotation(mosslar2, 0F, 0F, 0F);
	mosslar1 = new ModelRenderer(this, 0, 52);
	mosslar1.addBox(-1.5F, -1.5F, -0.5F, 3, 1, 1);
	ARMRIGBOTROT.addChild(mosslar1);
	mosslar1.setRotationPoint(-0.5F, 3F, -3F);
	mosslar1.setTextureSize(128, 64);
	mosslar1.mirror = true;
	setRotation(mosslar1, 0F, 0F, 0F);
	mosslar3 = new ModelRenderer(this, 0, 52);
	mosslar3.addBox(-0.5F, -3F, -1F, 1, 6, 2);
	ARMRIGBOTROT.addChild(mosslar3);
	mosslar3.setRotationPoint(3F, 6F, -0.5F);
	mosslar3.setTextureSize(128, 64);
	mosslar3.mirror = true;
	setRotation(mosslar3, 0F, 0F, 0F);
	mosslar4 = new ModelRenderer(this, 0, 52);
	mosslar4.addBox(-1.5F, -1.5F, -0.5F, 3, 1, 1);
	ARMRIGBOTROT.addChild(mosslar4);
	mosslar4.setRotationPoint(-0.5F, 3F, 3F);
	mosslar4.setTextureSize(128, 64);
	mosslar4.mirror = true;
	setRotation(mosslar4, 0F, 0F, 0F);
	mosslar5 = new ModelRenderer(this, 0, 52);
	mosslar5.addBox(-1.5F, -1.5F, -0.5F, 2, 5, 1);
	ARMRIGBOTROT.addChild(mosslar5);
	mosslar5.setRotationPoint(0.5F, 4F, 3F);
	mosslar5.setTextureSize(128, 64);
	mosslar5.mirror = true;
	setRotation(mosslar5, 0F, 0F, 0F);
	armrigbot = new ModelRenderer(this, 42, 21);
	armrigbot.addBox(-2.5F, 0F, -2.5F, 5, 14, 5);
	ARMRIGBOTROT.addChild(armrigbot);
	armrigbot.setRotationPoint(0F, 0F, 0F);
	armrigbot.setTextureSize(128, 64);
	armrigbot.mirror = true;
	setRotation(armrigbot, 0F, 0F, 0F);
	// armrigtopfold.addChildModelRenderer(ARMRIGBOTROT);
	// bodyfold.addChildModelRenderer(ARMRIGTOPROT);

	BACKTREESTEM6 = new ModelRenderer(this, "BACKTREESTEM6");
	BODYROT.addChild(BACKTREESTEM6);
	BACKTREESTEM6.setRotationPoint(-3F, -15F, 0.5F);
	setRotation(BACKTREESTEM6, 0F, 0F, 0F);
	BACKTREESTEM6.mirror = true;
	backtreesleaves6 = new ModelRenderer(this, 23, 42);
	backtreesleaves6.addBox(-3F, -3F, -3F, 6, 3, 6);
	BACKTREESTEM6.addChild(backtreesleaves6);
	backtreesleaves6.setRotationPoint(0F, -4F, 0F);
	backtreesleaves6.setTextureSize(128, 64);
	backtreesleaves6.mirror = true;
	setRotation(backtreesleaves6, 0F, 0F, 0F);
	backtreestem6 = new ModelRenderer(this, 32, 28);
	backtreestem6.addBox(-0.5F, -4F, -0.5F, 1, 4, 1);
	BACKTREESTEM6.addChild(backtreestem6);
	backtreestem6.setRotationPoint(0F, 0F, 0F);
	backtreestem6.setTextureSize(128, 64);
	backtreestem6.mirror = true;
	setRotation(backtreestem6, 0F, 0F, 0F);
	// bodyfold.addChildModelRenderer(BACKTREESTEM6);
	BACKTREESTEM5 = new ModelRenderer(this, "BACKTREESTEM5");
	BODYROT.addChild(BACKTREESTEM5);
	BACKTREESTEM5.setRotationPoint(3F, -15F, 0.5F);
	setRotation(BACKTREESTEM5, 0F, 0F, 0F);
	BACKTREESTEM5.mirror = true;
	backtreestem5 = new ModelRenderer(this, 32, 28);
	backtreestem5.addBox(-0.5F, -4F, -0.5F, 1, 4, 1);
	BACKTREESTEM5.addChild(backtreestem5);
	backtreestem5.setRotationPoint(0F, 0F, 0F);
	backtreestem5.setTextureSize(128, 64);
	backtreestem5.mirror = true;
	setRotation(backtreestem5, 0F, 0F, 0F);
	backtreesleaves5 = new ModelRenderer(this, 23, 42);
	backtreesleaves5.addBox(-3F, -3F, -3F, 6, 3, 6);
	BACKTREESTEM5.addChild(backtreesleaves5);
	backtreesleaves5.setRotationPoint(0F, -4F, 0F);
	backtreesleaves5.setTextureSize(128, 64);
	backtreesleaves5.mirror = true;
	setRotation(backtreesleaves5, 0F, 0F, 0F);
	// bodyfold.addChildModelRenderer(BACKTREESTEM5);
	BACKTREESTEM4 = new ModelRenderer(this, "BACKTREESTEM4");
	BODYROT.addChild(BACKTREESTEM4);
	BACKTREESTEM4.setRotationPoint(3F, -3F, 5.5F);
	setRotation(BACKTREESTEM4, 0F, 0F, 0F);
	BACKTREESTEM4.mirror = true;
	backtreesleaves4 = new ModelRenderer(this, 23, 33);
	backtreesleaves4.addBox(-3F, -3F, 0F, 6, 6, 3);
	BACKTREESTEM4.addChild(backtreesleaves4);
	backtreesleaves4.setRotationPoint(0F, 0F, 3F);
	backtreesleaves4.setTextureSize(128, 64);
	backtreesleaves4.mirror = true;
	setRotation(backtreesleaves4, 0F, 0F, 0F);
	backtreestem4 = new ModelRenderer(this, 23, 29);
	backtreestem4.addBox(-0.5F, -0.5F, 0F, 1, 1, 3);
	BACKTREESTEM4.addChild(backtreestem4);
	backtreestem4.setRotationPoint(0F, 0F, 0F);
	backtreestem4.setTextureSize(128, 64);
	backtreestem4.mirror = true;
	setRotation(backtreestem4, 0F, 0F, 0F);
	// bodyfold.addChildModelRenderer(BACKTREESTEM4);
	BACKTREESTEM3 = new ModelRenderer(this, "BACKTREESTEM3");
	BODYROT.addChild(BACKTREESTEM3);
	BACKTREESTEM3.setRotationPoint(-3F, -3F, 5.5F);
	setRotation(BACKTREESTEM3, 0F, 0F, 0F);
	BACKTREESTEM3.mirror = true;
	backtreesleaves3 = new ModelRenderer(this, 23, 33);
	backtreesleaves3.addBox(-3F, -3F, 0F, 6, 6, 3);
	BACKTREESTEM3.addChild(backtreesleaves3);
	backtreesleaves3.setRotationPoint(0F, 0F, 3F);
	backtreesleaves3.setTextureSize(128, 64);
	backtreesleaves3.mirror = true;
	setRotation(backtreesleaves3, 0F, 0F, 0F);
	backtreestem3 = new ModelRenderer(this, 23, 29);
	backtreestem3.addBox(-0.5F, -0.5F, 0F, 1, 1, 3);
	BACKTREESTEM3.addChild(backtreestem3);
	backtreestem3.setRotationPoint(0F, 0F, 0F);
	backtreestem3.setTextureSize(128, 64);
	backtreestem3.mirror = true;
	setRotation(backtreestem3, 0F, 0F, 0F);
	// bodyfold.addChildModelRenderer(BACKTREESTEM3);
	BACKTREESTEM2 = new ModelRenderer(this, "BACKTREESTEM2");
	BODYROT.addChild(BACKTREESTEM2);
	BACKTREESTEM2.setRotationPoint(3F, -11F, 5.5F);
	setRotation(BACKTREESTEM2, 0F, 0F, 0F);
	BACKTREESTEM2.mirror = true;
	backtreesleaves2 = new ModelRenderer(this, 23, 33);
	backtreesleaves2.addBox(-3F, -3F, 0F, 6, 6, 3);
	BACKTREESTEM2.addChild(backtreesleaves2);
	backtreesleaves2.setRotationPoint(0F, 0F, 3F);
	backtreesleaves2.setTextureSize(128, 64);
	backtreesleaves2.mirror = true;
	setRotation(backtreesleaves2, 0F, 0F, 0F);
	backtreestem2 = new ModelRenderer(this, 23, 29);
	backtreestem2.addBox(-0.5F, -0.5F, 0F, 1, 1, 3);
	BACKTREESTEM2.addChild(backtreestem2);
	backtreestem2.setRotationPoint(0F, 0F, 0F);
	backtreestem2.setTextureSize(128, 64);
	backtreestem2.mirror = true;
	setRotation(backtreestem2, 0F, 0F, 0F);
	// bodyfold.addChildModelRenderer(BACKTREESTEM2);
	BACKTREESTEM1 = new ModelRenderer(this, "BACKTREESTEM1");
	BODYROT.addChild(BACKTREESTEM1);
	BACKTREESTEM1.setRotationPoint(-3F, -11F, 5.5F);
	setRotation(BACKTREESTEM1, 0F, 0F, 0F);
	BACKTREESTEM1.mirror = true;
	backtreesleaves1 = new ModelRenderer(this, 23, 33);
	backtreesleaves1.addBox(-3F, -3F, 0F, 6, 6, 3);
	BACKTREESTEM1.addChild(backtreesleaves1);
	backtreesleaves1.setRotationPoint(0F, 0F, 3F);
	backtreesleaves1.setTextureSize(128, 64);
	backtreesleaves1.mirror = true;
	setRotation(backtreesleaves1, 0F, 0F, 0F);
	backtreestem1 = new ModelRenderer(this, 23, 29);
	backtreestem1.addBox(-0.5F, -0.5F, 0F, 1, 1, 3);
	BACKTREESTEM1.addChild(backtreestem1);
	backtreestem1.setRotationPoint(0F, 0F, 0F);
	backtreestem1.setTextureSize(128, 64);
	backtreestem1.mirror = true;
	setRotation(backtreestem1, 0F, 0F, 0F);

	// bodyfold.addChildModelRenderer(BACKTREESTEM1);
	HEADROT = new ModelRenderer(this, "HEADROT");
	BODYROT.addChild(HEADROT);
	HEADROT.setRotationPoint(0F, -12F, -4.5F);
	setRotation(HEADROT, 0F, 0F, 0F);
	HEADROT.mirror = true;
	brow4 = new ModelRenderer(this, 98, 18);
	brow4.addBox(-0.5F, -0.5F, -0.5F, 1, 2, 1);
	HEADROT.addChild(brow4);
	brow4.setRotationPoint(0F, -5F, -3F);
	brow4.setTextureSize(128, 64);
	brow4.mirror = true;
	setRotation(brow4, 0F, 0F, 0F);
	NOSEROT = new ModelRenderer(this, "NOSEROT");
	HEADROT.addChild(NOSEROT);
	NOSEROT.setRotationPoint(0F, -3F, -3F);
	setRotation(NOSEROT, 0F, 0F, 0F);
	NOSEROT.mirror = true;
	nose2 = new ModelRenderer(this, 94, 20);
	nose2.addBox(0F, 0F, 0F, 1, 1, 1);
	NOSEROT.addChild(nose2);
	nose2.setRotationPoint(-0.5F, 1F, -2.5F);
	nose2.setTextureSize(128, 64);
	nose2.mirror = true;
	setRotation(nose2, 0F, 0F, 0F);
	nose1 = new ModelRenderer(this, 90, 16);
	nose1.addBox(0F, 0F, 0F, 1, 1, 2);
	NOSEROT.addChild(nose1);
	nose1.setRotationPoint(-0.5F, 0F, -2.5F);
	nose1.setTextureSize(128, 64);
	nose1.mirror = true;
	setRotation(nose1, 0F, 0F, 0F);
	nose3 = new ModelRenderer(this, 90, 22);
	nose3.addBox(0F, 0F, 0F, 2, 2, 2);
	NOSEROT.addChild(nose3);
	nose3.setRotationPoint(-1F, 2F, -3F);
	nose3.setTextureSize(128, 64);
	nose3.mirror = true;
	setRotation(nose3, 0F, 0F, 0F);
	// headfold.addChildModelRenderer(NOSEROT);
	brow3 = new ModelRenderer(this, 98, 18);
	brow3.addBox(-0.5F, -0.5F, -0.5F, 1, 2, 1);
	HEADROT.addChild(brow3);
	brow3.setRotationPoint(-2F, -5F, -3F);
	brow3.setTextureSize(128, 64);
	brow3.mirror = true;
	setRotation(brow3, 0F, 0F, 0F);
	brow1 = new ModelRenderer(this, 106, 13);
	brow1.addBox(-2.5F, -0.5F, -0.5F, 5, 2, 1);
	HEADROT.addChild(brow1);
	brow1.setRotationPoint(0F, -7F, -3F);
	brow1.setTextureSize(128, 64);
	brow1.mirror = true;
	setRotation(brow1, 0F, 0F, 0F);
	brow5 = new ModelRenderer(this, 98, 18);
	brow5.addBox(-0.5F, -0.5F, -0.5F, 1, 2, 1);
	HEADROT.addChild(brow5);
	brow5.setRotationPoint(2F, -5F, -3F);
	brow5.setTextureSize(128, 64);
	brow5.mirror = true;
	setRotation(brow5, 0F, 0F, 0F);
	brow2 = new ModelRenderer(this, 106, 17);
	brow2.addBox(-2.5F, -0.5F, -0.5F, 5, 3, 1);
	HEADROT.addChild(brow2);
	brow2.setRotationPoint(0F, -3F, -3F);
	brow2.setTextureSize(128, 64);
	brow2.mirror = true;
	setRotation(brow2, 0F, 0F, 0F);
	head = new ModelRenderer(this, 88, 0);
	head.addBox(0F, 0F, 0F, 5, 12, 4);
	HEADROT.addChild(head);
	head.setRotationPoint(-2.5F, -9F, -2.5F);
	head.setTextureSize(128, 64);
	head.mirror = true;
	setRotation(head, 0F, 0F, 0F);
	// bodyfold.addChildModelRenderer(HEADROT);
	LEGRIGTOPROT = new ModelRenderer(this, "LEGRIGTOPROT");
	LEGRIGTOPROT.setRotationPoint(3.5F, 6F - heightToRaise, 0.5F);
	setRotation(LEGRIGTOPROT, 0F, 0F, 0F);
	LEGRIGTOPROT.mirror = true;
	mossulr1 = new ModelRenderer(this, 0, 52);
	mossulr1.addBox(-1.5F, -1.5F, -0.5F, 3, 4, 1);
	LEGRIGTOPROT.addChild(mossulr1);
	mossulr1.setRotationPoint(0.5F, 4F, -3.5F);
	mossulr1.setTextureSize(128, 64);
	mossulr1.mirror = true;
	setRotation(mossulr1, 0F, 0F, 0F);
	mossulr2 = new ModelRenderer(this, 0, 52);
	mossulr2.addBox(-1.5F, -1.5F, -0.5F, 3, 4, 1);
	LEGRIGTOPROT.addChild(mossulr2);
	mossulr2.setRotationPoint(0.5F, 4F, 3.5F);
	mossulr2.setTextureSize(128, 64);
	mossulr2.mirror = true;
	setRotation(mossulr2, 0F, 0F, 0F);
	legrigtop = new ModelRenderer(this, 62, 0);
	legrigtop.addBox(-2.5F, 0F, -2.5F, 6, 9, 6);
	LEGRIGTOPROT.addChild(legrigtop);
	legrigtop.setRotationPoint(-0.5F, 0F, -0.5F);
	legrigtop.setTextureSize(128, 64);
	legrigtop.mirror = true;
	setRotation(legrigtop, 0F, 0F, 0F);
	LEGRIGBOTROT = new ModelRenderer(this, "LEGRIGBOTROT");
	LEGRIGTOPROT.addChild(LEGRIGBOTROT);
	LEGRIGBOTROT.setRotationPoint(0F, 9F, 0F);
	setRotation(LEGRIGBOTROT, 0F, 0F, 0F);
	LEGRIGBOTROT.mirror = true;
	mossllr2 = new ModelRenderer(this, 0, 52);
	mossllr2.addBox(-1.5F, -1.5F, -0.5F, 3, 4, 1);
	LEGRIGBOTROT.addChild(mossllr2);
	mossllr2.setRotationPoint(0.5F, 3F, 3.5F);
	mossllr2.setTextureSize(128, 64);
	mossllr2.mirror = true;
	setRotation(mossllr2, 0F, 0F, 0F);
	mossllr1 = new ModelRenderer(this, 0, 52);
	mossllr1.addBox(-1.5F, -1.5F, -0.5F, 3, 4, 1);
	LEGRIGBOTROT.addChild(mossllr1);
	mossllr1.setRotationPoint(0.5F, 3F, -3.5F);
	mossllr1.setTextureSize(128, 64);
	mossllr1.mirror = true;
	setRotation(mossllr1, 0F, 0F, 0F);
	toer6 = new ModelRenderer(this, 62, 30);
	toer6.addBox(-0.5F, -0.5F, -4F, 1, 1, 4);
	LEGRIGBOTROT.addChild(toer6);
	toer6.setRotationPoint(2F, 8.5F, -2.5F);
	toer6.setTextureSize(128, 64);
	toer6.mirror = true;
	setRotation(toer6, 0F, 0F, 0F);
	toer5 = new ModelRenderer(this, 62, 30);
	toer5.addBox(-0.5F, -0.5F, -4F, 1, 1, 4);
	LEGRIGBOTROT.addChild(toer5);
	toer5.setRotationPoint(0F, 8.5F, -2.5F);
	toer5.setTextureSize(128, 64);
	toer5.mirror = true;
	setRotation(toer5, 0F, 0F, 0F);
	toer4 = new ModelRenderer(this, 62, 30);
	toer4.addBox(-0.5F, -0.5F, -4F, 1, 1, 4);
	LEGRIGBOTROT.addChild(toer4);
	toer4.setRotationPoint(-2F, 8.5F, -2.5F);
	toer4.setTextureSize(128, 64);
	toer4.mirror = true;
	setRotation(toer4, 0F, 0F, 0F);
	toer3 = new ModelRenderer(this, 62, 30);
	toer3.addBox(-0.5F, -0.5F, 0F, 1, 1, 3);
	LEGRIGBOTROT.addChild(toer3);
	toer3.setRotationPoint(2F, 8.5F, 2.5F);
	toer3.setTextureSize(128, 64);
	toer3.mirror = true;
	setRotation(toer3, 0F, 0F, 0F);
	toer2 = new ModelRenderer(this, 62, 30);
	toer2.addBox(-0.5F, -0.5F, 0F, 1, 1, 3);
	LEGRIGBOTROT.addChild(toer2);
	toer2.setRotationPoint(0F, 8.5F, 2.5F);
	toer2.setTextureSize(128, 64);
	toer2.mirror = true;
	setRotation(toer2, 0F, 0F, 0F);
	toer1 = new ModelRenderer(this, 62, 30);
	toer1.addBox(-0.5F, -0.5F, 0F, 1, 1, 3);
	LEGRIGBOTROT.addChild(toer1);
	toer1.setRotationPoint(-2F, 8.5F, 2.5F);
	toer1.setTextureSize(128, 64);
	toer1.mirror = true;
	setRotation(toer1, 0F, 0F, 0F);
	legrigbot = new ModelRenderer(this, 62, 15);
	legrigbot.addBox(0F, 0F, 0F, 7, 9, 6);
	LEGRIGBOTROT.addChild(legrigbot);
	legrigbot.setRotationPoint(-3.5F, 0F, -3F);
	legrigbot.setTextureSize(128, 64);
	legrigbot.mirror = true;
	setRotation(legrigbot, 0F, 0F, 0F);
	// legrigtopfold.addChildModelRenderer(LEGRIGBOTROT);
	LEGLEFTTOPROT = new ModelRenderer(this, "LEGLEFTTOPROT");
	LEGLEFTTOPROT.setRotationPoint(-4.5F, 6F - heightToRaise, 0.5F);
	setRotation(LEGLEFTTOPROT, 0F, 0F, 0F);
	LEGLEFTTOPROT.mirror = true;
	mossull2 = new ModelRenderer(this, 0, 52);
	mossull2.addBox(-1.5F, -1.5F, -0.5F, 2, 1, 1);
	LEGLEFTTOPROT.addChild(mossull2);
	mossull2.setRotationPoint(1.5F, 5F, -3.5F);
	mossull2.setTextureSize(128, 64);
	mossull2.mirror = true;
	setRotation(mossull2, 0F, 0F, 0F);
	mossull1 = new ModelRenderer(this, 0, 52);
	mossull1.addBox(-1.5F, -1.5F, -0.5F, 2, 4, 1);
	LEGLEFTTOPROT.addChild(mossull1);
	mossull1.setRotationPoint(-0.5F, 2F, -3.5F);
	mossull1.setTextureSize(128, 64);
	mossull1.mirror = true;
	setRotation(mossull1, 0F, 0F, 0F);
	mossull4 = new ModelRenderer(this, 0, 52);
	mossull4.addBox(-1.5F, -1.5F, -0.5F, 2, 1, 1);
	LEGLEFTTOPROT.addChild(mossull4);
	mossull4.setRotationPoint(1.5F, 5F, 3.5F);
	mossull4.setTextureSize(128, 64);
	mossull4.mirror = true;
	setRotation(mossull4, 0F, 0F, 0F);
	legleftop = new ModelRenderer(this, 62, 0);
	legleftop.addBox(-2.5F, 0F, -2.5F, 6, 9, 6);
	LEGLEFTTOPROT.addChild(legleftop);
	legleftop.setRotationPoint(-0.5F, 0F, 0F);
	legleftop.setTextureSize(128, 64);
	legleftop.mirror = true;
	setRotation(legleftop, 0F, 0F, 0F);
	mossull3 = new ModelRenderer(this, 0, 52);
	mossull3.addBox(-1.5F, -1.5F, -0.5F, 2, 4, 1);
	LEGLEFTTOPROT.addChild(mossull3);
	mossull3.setRotationPoint(-0.5F, 2F, 3.5F);
	mossull3.setTextureSize(128, 64);
	mossull3.mirror = true;
	setRotation(mossull3, 0F, 0F, 0F);
	LEGLEFBOTROT = new ModelRenderer(this, "LEGLEFBOTROT");
	LEGLEFTTOPROT.addChild(LEGLEFBOTROT);
	LEGLEFBOTROT.setRotationPoint(0F, 9F, 0F);
	setRotation(LEGLEFBOTROT, 0F, 0F, 0F);
	LEGLEFBOTROT.mirror = true;
	toel4 = new ModelRenderer(this, 62, 30);
	toel4.addBox(-0.5F, -0.5F, -4F, 1, 1, 4);
	LEGLEFBOTROT.addChild(toel4);
	toel4.setRotationPoint(-2.5F, 8.5F, -2.5F);
	toel4.setTextureSize(128, 64);
	toel4.mirror = true;
	setRotation(toel4, 0F, 0F, 0F);
	toel6 = new ModelRenderer(this, 62, 30);
	toel6.addBox(-0.5F, -0.5F, -4F, 1, 1, 4);
	LEGLEFBOTROT.addChild(toel6);
	toel6.setRotationPoint(1.5F, 8.5F, -2.5F);
	toel6.setTextureSize(128, 64);
	toel6.mirror = true;
	setRotation(toel6, 0F, 0F, 0F);
	toel5 = new ModelRenderer(this, 62, 30);
	toel5.addBox(-0.5F, -0.5F, -4F, 1, 1, 4);
	LEGLEFBOTROT.addChild(toel5);
	toel5.setRotationPoint(-0.5F, 8.5F, -2.5F);
	toel5.setTextureSize(128, 64);
	toel5.mirror = true;
	setRotation(toel5, 0F, 0F, 0F);
	toel3 = new ModelRenderer(this, 62, 30);
	toel3.addBox(-0.5F, -0.5F, 0F, 1, 1, 3);
	LEGLEFBOTROT.addChild(toel3);
	toel3.setRotationPoint(1.5F, 8.5F, 2.5F);
	toel3.setTextureSize(128, 64);
	toel3.mirror = true;
	setRotation(toel3, 0F, 0F, 0F);
	toel2 = new ModelRenderer(this, 62, 30);
	toel2.addBox(-0.5F, -0.5F, 0F, 1, 1, 3);
	LEGLEFBOTROT.addChild(toel2);
	toel2.setRotationPoint(-0.5F, 8.5F, 2.5F);
	toel2.setTextureSize(128, 64);
	toel2.mirror = true;
	setRotation(toel2, 0F, 0F, 0F);
	toel1 = new ModelRenderer(this, 62, 30);
	toel1.addBox(0F, 0F, 0F, 1, 1, 3);
	LEGLEFBOTROT.addChild(toel1);
	toel1.setRotationPoint(-3F, 8F, 2.5F);
	toel1.setTextureSize(128, 64);
	toel1.mirror = true;
	setRotation(toel1, 0F, 0F, 0F);
	mosslll1 = new ModelRenderer(this, 0, 52);
	mosslll1.addBox(-1.5F, -1.5F, -0.5F, 2, 5, 1);
	LEGLEFBOTROT.addChild(mosslll1);
	mosslll1.setRotationPoint(-1F, 3F, -3.5F);
	mosslll1.setTextureSize(128, 64);
	mosslll1.mirror = true;
	setRotation(mosslll1, 0F, 0F, 0F);
	mosslll2 = new ModelRenderer(this, 0, 52);
	mosslll2.addBox(-1.5F, -1.5F, -0.5F, 2, 5, 1);
	LEGLEFBOTROT.addChild(mosslll2);
	mosslll2.setRotationPoint(-1F, 3F, 3.5F);
	mosslll2.setTextureSize(128, 64);
	mosslll2.mirror = true;
	setRotation(mosslll2, 0F, 0F, 0F);
	leglefbot = new ModelRenderer(this, 62, 15);
	leglefbot.addBox(0F, 0F, 0F, 7, 9, 6);
	LEGLEFBOTROT.addChild(leglefbot);
	leglefbot.setRotationPoint(-3.5F, 0F, -3F);
	leglefbot.setTextureSize(128, 64);
	leglefbot.mirror = true;
	setRotation(leglefbot, 0F, 0F, 0F);
	// legleftopfold.addChildModelRenderer(LEGLEFBOTROT);
    }

    private float mapValueofSet1ToSet2(float value, float set1min, float set1max, float set2min, float set2max) {
	return (value - set1min) * ((set2max - set2min) / (set1max - set1min)) + set2min;
    }

    @Override
    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
	super.render(entity, f, f1, f2, f3, f4, f5);
	setRotationAngles(f, f1, f2, f3, f4, f5, entity);
	float scale = 1.5f;
	float field_78145_g = 8.0F;
	float field_78151_h = 4.0F;

	if (this.isChild) {
	    float var8 = 2.0F;
	    GL11.glPushMatrix();
	    GL11.glTranslatef(0.0F, field_78145_g * f5, field_78151_h * f5);
	    // HEADROT.render(f5);
	    GL11.glPopMatrix();
	    GL11.glPushMatrix();
	    GL11.glScalef(1.0F / var8, 1.0F / var8, 1.0F / var8);
	    GL11.glTranslatef(0.0F, 24.0F * f5, 0.0F);
	    BODYROT.render(scale * f5);
	    LEGRIGTOPROT.render(scale * f5);
	    LEGLEFTTOPROT.render(scale * f5);
	    GL11.glPopMatrix();
	} else {
	    BODYROT.render(scale * f5);
	    LEGRIGTOPROT.render(scale * f5);
	    LEGLEFTTOPROT.render(scale * f5);
	}

    }

    @Override
    public void setLivingAnimations(EntityLivingBase par1EntityLiving, float par2, float par3, float par4) {
	EntityTreeEnt var5 = (EntityTreeEnt) par1EntityLiving;

	/* Constant Animation Rotations */
	BACKTREESTEM1.rotateAngleY = (float) (-25 * Math.PI / 180f);
	BACKTREESTEM2.rotateAngleY = (float) (+25 * Math.PI / 180f);
	BACKTREESTEM3.rotateAngleY = (float) (-40 * Math.PI / 180f);
	BACKTREESTEM4.rotateAngleY = (float) (+40 * Math.PI / 180f);

	BACKTREESTEM5.rotateAngleX = (float) (-30 * Math.PI / 180f);
	BACKTREESTEM5.rotateAngleZ = (float) (+30 * Math.PI / 180f);

	BACKTREESTEM6.rotateAngleX = (float) (-30 * Math.PI / 180f);
	BACKTREESTEM6.rotateAngleZ = (float) (-30 * Math.PI / 180f);

	toer1.rotateAngleY = (float) (-15 * Math.PI / 180f);
	toer3.rotateAngleY = (float) (+15 * Math.PI / 180f);
	toer4.rotateAngleY = (float) (+15 * Math.PI / 180f);
	toer6.rotateAngleY = (float) (-15 * Math.PI / 180f);

	toel1.rotateAngleY = (float) (-15 * Math.PI / 180f);
	toel3.rotateAngleY = (float) (+15 * Math.PI / 180f);
	toel4.rotateAngleY = (float) (+15 * Math.PI / 180f);
	toel6.rotateAngleY = (float) (-15 * Math.PI / 180f);

	LEGRIGTOPROT.rotateAngleX = (float) (MathHelper.cos(par2 * 0.6662F + (float) Math.PI) * 1.8F * ModelHelper
		.abs(Math.log(par3 + 1)));
	LEGLEFTTOPROT.rotateAngleX = (float) (MathHelper.cos(par2 * 0.6662F) * 1.8F * ModelHelper.abs(Math
		.log(par3 + 1)));
	LEGRIGBOTROT.rotateAngleX = (float) Math.abs(MathHelper.cos(par2 * 0.6662F / 2 + (float) Math.PI) * 1.8F
		* ModelHelper.abs(Math.log(par3 + 1)));
	LEGLEFBOTROT.rotateAngleX = (float) Math.abs(MathHelper.cos(par2 * 0.6662F / 2) * 1.8F
		* ModelHelper.abs(Math.log(par3 + 1)));

	if (var5.getEntityState() == EntityStates.idle || var5.getEntityState() == EntityStates.looking) {
	    ARMLEFTOPROT.rotateAngleX = (float) (MathHelper.cos(par2 * 0.6662F + (float) Math.PI) * 1.8F * ModelHelper
		    .abs(Math.log(par3 + 1)));
	    ARMRIGTOPROT.rotateAngleX = (float) (MathHelper.cos(par2 * 0.6662F) * 1.8F * ModelHelper.abs(Math
		    .log(par3 + 1)));

	    ARMLEFBOTROT.rotateAngleX = (float) -Math.abs(MathHelper.cos(par2 * 0.6662F / 2 + (float) Math.PI) * 1.8F
		    * ModelHelper.abs(Math.log(par3 + 1)));
	    ARMRIGBOTROT.rotateAngleX = (float) -Math.abs(MathHelper.cos(par2 * 0.6662F / 2) * 1.8F
		    * ModelHelper.abs(Math.log(par3 + 1)));
	} else if (var5.getEntityState() == EntityStates.attacking) {
	    ARMRIGTOPROT.rotateAngleZ = (float) (-5 * Math.PI / 180);
	    ARMRIGTOPROT.rotateAngleX = (float) (Math.PI / 180) * (-5 + 8 * MathHelper.cos(par2 * 0.6662F));
	    ARMRIGTOPROT.rotateAngleY = (float) (0 * Math.PI / 180);
	    ARMRIGBOTROT.rotateAngleX = (float) (Math.PI / 180) * (-80 + 8 * MathHelper.cos(par2 * 0.6662F));

	    ARMLEFTOPROT.rotateAngleZ = (float) (5 * Math.PI / 180);
	    ARMLEFTOPROT.rotateAngleX = (float) (Math.PI / 180)
		    * (-5 + 8 * MathHelper.cos(par2 * 0.6662F + (float) Math.PI));
	    ARMLEFTOPROT.rotateAngleY = (float) (-0 * Math.PI / 180);
	    ARMLEFBOTROT.rotateAngleX = (float) (Math.PI / 180)
		    * (-80 + 8 * MathHelper.cos(par2 * 0.6662F + (float) Math.PI));
	}

	float minTime;
	float maxTime;
	if (var5.getAnimTime() > var5.maxAnimTime * 7 / 8) {
	    minTime = var5.maxAnimTime * 7 / 8;
	    maxTime = var5.maxAnimTime;
	    ARMRIGTOPROT.rotateAngleZ = mapValueofSet1ToSet2(var5.getAnimTime(), minTime, maxTime, (float) (-75
		    * Math.PI / 180), (float) (-5 * Math.PI / 180));
	    ARMRIGTOPROT.rotateAngleX = mapValueofSet1ToSet2(var5.getAnimTime(), minTime, maxTime,
		    (float) (15 * Math.PI / 180), (float) (-5 * Math.PI / 180));
	    ARMRIGTOPROT.rotateAngleY = 0.0f;
	    ARMRIGBOTROT.rotateAngleX = mapValueofSet1ToSet2(var5.getAnimTime(), minTime, maxTime, (float) (-110
		    * Math.PI / 180), (float) (-80 * Math.PI / 180));

	    ARMLEFTOPROT.rotateAngleZ = mapValueofSet1ToSet2(var5.getAnimTime(), minTime, maxTime,
		    (float) (75 * Math.PI / 180), (float) (5 * Math.PI / 180));
	    ARMLEFTOPROT.rotateAngleX = mapValueofSet1ToSet2(var5.getAnimTime(), minTime, maxTime,
		    (float) (15 * Math.PI / 180), (float) (-5 * Math.PI / 180));
	    ARMLEFTOPROT.rotateAngleY = 0.0f;
	    ARMLEFBOTROT.rotateAngleX = mapValueofSet1ToSet2(var5.getAnimTime(), minTime, maxTime, (float) (-110
		    * Math.PI / 180), (float) (-80 * Math.PI / 180));
	} else if (var5.getAnimTime() > var5.maxAnimTime * 6 / 8) {
	    maxTime = var5.maxAnimTime * 7 / 8;
	    minTime = var5.maxAnimTime * 6 / 8;
	    ARMRIGTOPROT.rotateAngleZ = (float) (-75 * Math.PI / 180);
	    ARMRIGTOPROT.rotateAngleX = mapValueofSet1ToSet2(var5.getAnimTime(), minTime, maxTime, (float) (-60
		    * Math.PI / 180), (float) (15 * Math.PI / 180));
	    ARMRIGTOPROT.rotateAngleY = mapValueofSet1ToSet2(var5.getAnimTime(), minTime, maxTime,
		    (float) (30 * Math.PI / 180), (float) (0 * Math.PI / 180));
	    ARMRIGBOTROT.rotateAngleX = mapValueofSet1ToSet2(var5.getAnimTime(), minTime, maxTime, (float) (-80
		    * Math.PI / 180), (float) (-110 * Math.PI / 180));

	    ARMLEFTOPROT.rotateAngleZ = (float) (75 * Math.PI / 180);
	    ARMLEFTOPROT.rotateAngleX = mapValueofSet1ToSet2(var5.getAnimTime(), minTime, maxTime, (float) (-60
		    * Math.PI / 180), (float) (15 * Math.PI / 180));
	    ARMLEFTOPROT.rotateAngleY = mapValueofSet1ToSet2(var5.getAnimTime(), minTime, maxTime, (float) (-30
		    * Math.PI / 180), (float) (0 * Math.PI / 180));
	    ARMLEFBOTROT.rotateAngleX = mapValueofSet1ToSet2(var5.getAnimTime(), minTime, maxTime, (float) (-80
		    * Math.PI / 180), (float) (-110 * Math.PI / 180));
	} else if (var5.getAnimTime() > var5.maxAnimTime * 5 / 8) {
	    maxTime = var5.maxAnimTime * 6 / 8;
	    minTime = var5.maxAnimTime * 5 / 4;

	    ARMRIGTOPROT.rotateAngleZ = (float) (-75 * Math.PI / 180);
	    ARMRIGTOPROT.rotateAngleX = mapValueofSet1ToSet2(var5.getAnimTime(), minTime, maxTime,
		    (float) (15 * Math.PI / 180), (float) (-60 * Math.PI / 180));
	    ARMRIGTOPROT.rotateAngleY = mapValueofSet1ToSet2(var5.getAnimTime(), minTime, maxTime,
		    (float) (0 * Math.PI / 180), (float) (30 * Math.PI / 180));
	    ARMRIGBOTROT.rotateAngleX = mapValueofSet1ToSet2(var5.getAnimTime(), minTime, maxTime, (float) (-110
		    * Math.PI / 180), (float) (-80 * Math.PI / 180));

	    ARMLEFTOPROT.rotateAngleZ = (float) (75 * Math.PI / 180);
	    ARMLEFTOPROT.rotateAngleX = mapValueofSet1ToSet2(var5.getAnimTime(), minTime, maxTime,
		    (float) (15 * Math.PI / 180), (float) (-60 * Math.PI / 180));
	    ARMLEFTOPROT.rotateAngleY = mapValueofSet1ToSet2(var5.getAnimTime(), minTime, maxTime,
		    (float) (0 * Math.PI / 180), (float) (-30 * Math.PI / 180));
	    ARMLEFBOTROT.rotateAngleX = mapValueofSet1ToSet2(var5.getAnimTime(), minTime, maxTime, (float) (-110
		    * Math.PI / 180), (float) (-80 * Math.PI / 180));
	} else if (var5.maxAnimTime > 0) {
	    maxTime = var5.maxAnimTime * 5 / 4;
	    minTime = 0;

	    ARMRIGTOPROT.rotateAngleZ = mapValueofSet1ToSet2(var5.getAnimTime(), minTime, maxTime, (float) (-5
		    * Math.PI / 180), (float) (-75 * Math.PI / 180));
	    ARMRIGTOPROT.rotateAngleX = mapValueofSet1ToSet2(var5.getAnimTime(), minTime, maxTime, (float) (-5
		    * Math.PI / 180), (float) (15 * Math.PI / 180));
	    ARMRIGTOPROT.rotateAngleY = 0.0f;
	    ARMRIGBOTROT.rotateAngleX = mapValueofSet1ToSet2(var5.getAnimTime(), minTime, maxTime, (float) (-80
		    * Math.PI / 180), (float) (-110 * Math.PI / 180));

	    ARMLEFTOPROT.rotateAngleZ = mapValueofSet1ToSet2(var5.getAnimTime(), minTime, maxTime,
		    (float) (5 * Math.PI / 180), (float) (75 * Math.PI / 180));
	    ARMLEFTOPROT.rotateAngleX = mapValueofSet1ToSet2(var5.getAnimTime(), minTime, maxTime, (float) (-5
		    * Math.PI / 180), (float) (15 * Math.PI / 180));
	    ARMLEFTOPROT.rotateAngleY = 0.0f;
	    ARMLEFBOTROT.rotateAngleX = mapValueofSet1ToSet2(var5.getAnimTime(), minTime, maxTime, (float) (-80
		    * Math.PI / 180), (float) (-110 * Math.PI / 180));
	}
	super.setLivingAnimations(par1EntityLiving, par2, par3, par4);
    }

    private void setRotation(ModelRenderer model, float x, float y, float z) {
	model.rotateAngleX = x;
	model.rotateAngleY = y;
	model.rotateAngleZ = z;
    }

    @Override
    public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity par7Entity) {
	super.setRotationAngles(f, f1, f2, f3, f4, f5, par7Entity);
	HEADROT.rotateAngleX = Math.min(Math.max(f4, -15), +15) * (float) (Math.PI / 180f);
	HEADROT.rotateAngleY = Math.min(Math.max(f3, -45), +45) * (float) (Math.PI / 180f);
    }
}
